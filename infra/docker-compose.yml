version: '3.3'
services:

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_volume:${APP_HOME}/static
      - media_volume:${APP_HOME}/media
    depends_on:
      - web

  db:
    env_file: ./.env
    image: postgres
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data/./
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ../backend
      dockerfile: Dockerfile
    env_file: ./.env
    command:
      - /bin/sh
      - '-c'
      - ${APP_HOME}/entrypoint.sh
    expose:
      - 8001
    volumes:
      - ../backend:${APP_HOME}
      - ../data:${APP_HOME}/data
      - static_volume:${APP_HOME}/static
      - media_volume:${APP_HOME}/media
    depends_on:
      - db

volumes:
  static_volume:
  media_volume:
  pg_data: